  # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      with:
        HOST: ${{ secrets.ip}}
        USERNAME: ${{ secrets.usuario}}
        PORT: ${{ secrets.porta}}
        KEY: ${{ secrets.chave}}
        source: "Dockerfile, target/*.jar"
        target: repo/api
 
    - name: Executing remote command
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.ip}}
        USERNAME: ${{ secrets.usuario}}
        PORT: ${{ secrets.porta}}
        KEY: ${{ secrets.chave}}
        script: |
            cd ./repo/api
            docker kill apir
            docker rmi api
            docker build . -t api
            docker run --name apir -d --rm -p 80:80 api
            docker logs apir